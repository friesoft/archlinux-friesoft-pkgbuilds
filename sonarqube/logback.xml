<?xml version="1.0" encoding="UTF-8" ?>

<configuration debug="false">

  <appender name="SONAR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>/var/log/sonar/sonar.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <param name="FileNamePattern" value="/var/log/sonar/sonar.%i.log"/>
      <param name="MinIndex" value="1"/>
      <param name="MaxIndex" value="3"/>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <param name="MaxFileSize" value="5MB"/>
    </triggeringPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>
        %d{yyyy.MM.dd HH:mm:ss} %-5level %logger{20} %X %msg%n
      </pattern>
    </encoder>
  </appender>

  <!-- appender used to profile Sonar Server -->
  <appender name="PROFILING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>/var/log/sonar/profiling.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <param name="FileNamePattern" value="/var/log/sonar/logs/profiling.%i.log"/>
      <param name="MinIndex" value="1"/>
      <param name="MaxIndex" value="3"/>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <param name="MaxFileSize" value="5MB"/>
    </triggeringPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>
        %d{yyyy.MM.dd HH:mm:ss} %-5level %logger{20} %X %msg%n
      </pattern>
    </encoder>
  </appender>

  <!--
   Profiling of HTTP requests. Set level to DEBUG in order to log all the HTTP and SQL requests.
   Example of command-line to get the HTTP requests with execution time greater than 10s :
   grep 'rails  Completed in [0-9]\{5,\}ms' < profiling.log
  -->
  <logger name="rails" additivity="false">
    <level value="WARN"/>
    <appender-ref ref="PROFILING_FILE"/>
  </logger>


  <logger name="org.hibernate.cache.ReadWriteCache">
    <!-- removing "An item was expired by the cache while it was locked (increase your cache timeout)" msg -->
    <level value="ERROR"/>
  </logger>
  <logger name="org.hibernate.cache.EhCacheProvider">
    <!-- removing "org.hibernate.cache.EhCacheProvider - Could not find configuration)" message -->
    <level value="ERROR"/>
  </logger>

  <logger name="org.hibernate">
    <level value="WARN"/>
  </logger>

  <!-- Display SQL requests and results by setting the following loggers to level DEBUG -->
  <logger name="org.hibernate.SQL">
    <level value="WARN"/>
  </logger>
  <logger name="org.apache.ibatis">
    <level value="WARN"/>
  </logger>
  <logger name="java.sql">
    <level value="WARN"/>
  </logger>
  <logger name="java.sql.ResultSet">
    <level value="WARN"/>
  </logger>

  <root>
    <level value="INFO"/>
    <appender-ref ref="SONAR_FILE"/>
  </root>

</configuration>
